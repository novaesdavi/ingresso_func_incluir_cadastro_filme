name: "Terraform"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          
      - name: Configure Credentials
        run: |
          echo "TF_API_TOKEN=${{ secrets.TF_API_TOKEN  }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV


      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./aws-ec2-terraform
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./aws-ec2-terraform
        
      - name: Terraform Workspace List
        run: terraform workspace list
        working-directory: ./aws-ec2-terraform

      - name: Terraform Plan
        id: plan
        run: terraform plan -detailed-exitcode
        working-directory: ./aws-ec2-terraform

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
            
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Plan Detailed Exit Code
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform plan -detailed-exitcode
        