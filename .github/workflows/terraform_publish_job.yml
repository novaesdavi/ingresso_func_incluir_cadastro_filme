name: "Terraform"

on:
  pull_request:
    branches: [ "main" ]
    types: [ closed ]

env:
  TF_CLOUD_ORGANIZATION: "davinov"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "ingresso_func_incluir_cadastro_filme"
  CONFIG_DIRECTORY: "./aws-ec2-terraform"

jobs:
  build:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    name: "Build"
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
          
      - name: Install Amazon.Lambda.Tools
        run: dotnet tool install -g Amazon.Lambda.Tools
        
      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build
        run: dotnet build --no-restore --configuration Release
      
      - name: Test
        run: dotnet test --verbosity normal
        
      - name: Publish Lambda
        run: dotnet publish -c Release -o ./publish
        
      - name: List Published Files
        run: |
          echo "Listing all published files:"
          find ./publish -type f

      - name: Upload Lambda artifact
        uses: actions/upload-artifact@v2
        with:
          name: lambda-artifact
          path: ./publish
          
      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
  
  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    needs: build
    
    steps:
        
      - name: Download Lambda artifact
        uses: actions/download-artifact@v2
        with:
          name: lambda-artifact
          path: ./${{ env.TF_WORKSPACE }}/publish
          
      - name: Print Working Directory
        run: pwd

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve