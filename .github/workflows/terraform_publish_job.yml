name: "Terraform"

on:  
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  TF_CLOUD_ORGANIZATION: "davinov"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "ingresso_func_incluir_cadastro_filme"
  CONFIG_DIRECTORY: "./aws-ec2-terraform"

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
          
      - name: Install Amazon.Lambda.Tools
        run: dotnet tool install -g Amazon.Lambda.Tools
        
      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build
        run: dotnet build --no-restore --configuration Release
      
      - name: Test
        run: dotnet test --verbosity normal
        
      # aqui vocÃª define o pacote que ira subir para AWS informe a pasta do projeto onde se encontra o arquivo .csproj
      - name: Deploy to Lambda
        working-directory: ./src/IncluirCadastroFilmeFunction/
        run: dotnet lambda package IncluirCadastroFilmeFunction.zip

      - name: Upload Lambda artifact
        uses: actions/upload-artifact@v2
        with:
          retention-days: 1
          name: IncluirCadastroFilmeFunction
          path: ./src/IncluirCadastroFilmeFunction/IncluirCadastroFilmeFunction.zip
  
  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    
      - uses: actions/checkout@v4
    
      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
        
      - name: Download Lambda artifact
        uses: actions/download-artifact@v3
        with:
          name: IncluirCadastroFilmeFunction

      - name: List Files and folders in Working Directory
        run: ls -s

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ env.TF_API_TOKEN }}
                  
      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}
          
        
      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"
          